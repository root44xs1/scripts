local whitelist = {
     1408609880
}

local player = game.Players.LocalPlayer
local playerId = player.UserId

print("👤 Player ID detected:", playerId)

-- Function to check if the player is whitelisted
local function isPlayerWhitelisted(playerId)
    for _, id in ipairs(whitelist) do
        if id == playerId then
            return true
        end
    end
    return false
end

-- Check if the player is whitelisted
if not isPlayerWhitelisted(playerId) then
    warn("❌ Access denied for ID:", playerId)
    player:Kick(" You are not allowed to use this script Ur location has been doxed and U have been rebirthed")
    return
end

print("✅ ID " .. playerId .. " allowed. Loading the script...")

-- Function to safely load a script from a URL
local function safeLoad(url, name)
    print("🔄 Loading: " .. name)
    local success, result = pcall(function()
        return loadstring(game:HttpGet(url))()
    end)

    if not success then
        warn("❌ Loading Failed: " .. name .. " - " .. tostring(result))
        return nil
    end

    print("✅ " .. name .. " Successfully Loaded!")
    return result
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")
local HttpService = game:GetService("HttpService")

local library =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/iblameaabis/Ililililililililililililil/refs/heads/main/W%20UI", true))()

local window = library:AddWindow("Muscle Legends V3 | Reaper Scripts", {
    main_color = Color3.fromRGB(0, 0, 74),
    min_size = Vector2.new(610, 610),
    can_resize = false,
})

-- Main Tab
local Main = window:AddTab("Main")
local folder = Main:AddFolder("Brawl")

-- God Mode Toggle
local godModeToggle = false
folder:AddSwitch("God Mode (Brawl)", function(State)
    godModeToggle = State
    if State then
        task.spawn(function()
            while godModeToggle do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(0)
            end
        end)
    end
end)

-- Auto Join Brawl Toggle
local autoJoinToggle = false
folder:AddSwitch("Auto Join Brawl", function(State)
    autoJoinToggle = State
    if State then
        task.spawn(function()
            while autoJoinToggle do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait(2)
            end
        end)
    end
end)

Main:AddLabel("---Auto Farm---")

local folder1 = Main:AddFolder("Auto Farm Gym")

folder1:AddSwitch("Auto Muscle King Bench", function(State)
    MuscleKingBenchToggle = State
    if State then
        task.spawn(function()
            while MuscleKingBenchToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8590.06152, 46.0167427, -6043.34717))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Muscle King Bench"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end)

folder1:AddSwitch("Auto Muscle King Lift", function(State)
   MuscleKingDeadLiftToggle = State
    if State then
        task.spawn(function()
            while MuscleKingDeadLifeToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8772.97266, 24.4272194, -5638.37402))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Muscle King Deadlift"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end)










local folder3 = Main:AddFolder("Auto Farm Jungle")

-- Auto Jungle Bench Toggle
local jungleBenchToggle = false
folder3:AddSwitch("Auto Jungle Bench", function(State)
    jungleBenchToggle = State
    if State then
        task.spawn(function()
            while jungleBenchToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8629.88086, 64.8842468, 1855.03467))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Bench"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Jungle Bar Lift Toggle
local jungleBarLiftToggle = false
folder3:AddSwitch("Auto Jungle Bar Lift", function(State)
    jungleBarLiftToggle = State
    if State then
        task.spawn(function()
            while jungleBarLiftToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8678.05566, 14.5030098, 2089.25977))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Bar Lift"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Jungle Squat Toggle
local jungleSquatToggle = false
folder3:AddSwitch("Auto Jungle Squat", function(State)
    jungleSquatToggle = State
    if State then
        task.spawn(function()
            while jungleSquatToggle do
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-8374.25586, 34.5933418, 2932.44995))
                game:GetService("ReplicatedStorage").rEvents.machineInteractRemote:InvokeServer("useMachine", workspace.machinesFolder["Jungle Squat"].interactSeat)
                task.wait(0.1)
            end
        end)
    end
end)

local AutoEquip = Main:AddFolder("Auto Equip")

local equipPunchToggle = false
AutoEquip:AddSwitch("Auto Equip Punch", function(State)
    equipPunchToggle = State
    if State then
        task.spawn(function()
            while equipPunchToggle do
                local PunchTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Punch")
                if PunchTool then
                    PunchTool.Parent = game.Players.LocalPlayer.Character
                end
                task.wait(0.1)
            end
        end)
    end
end)








-- Auto Equip Weight Toggle
local equipWeightToggle = false
AutoEquip:AddSwitch("Auto Equip Weight", function(State)
    equipWeightToggle = State
    if State then
        task.spawn(function()
            while equipWeightToggle do
                local weightTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Weight")
                if weightTool then
                    weightTool.Parent = game.Players.LocalPlayer.Character
                end
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Equip Pushups Toggle
local equipPushupsToggle = false
AutoEquip:AddSwitch("Auto Equip Pushups", function(State)
    equipPushupsToggle = State
    if State then
        task.spawn(function()
            while equipPushupsToggle do
                local pushupsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Pushups")
                if pushupsTool then
                    pushupsTool.Parent = game.Players.LocalPlayer.Character
                end
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Equip Situps Toggle
local equipSitupsToggle = false
AutoEquip:AddSwitch("Auto Equip Situps", function(State)
    equipSitupsToggle = State
    if State then
        task.spawn(function()
            while equipSitupsToggle do
                local situpsTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Situps")
                if situpsTool then
                    situpsTool.Parent = game.Players.LocalPlayer.Character
                end
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Equip Handstand Toggle
local equipHandstandToggle = false
AutoEquip:AddSwitch("Auto Equip Handstands", function(State)
    equipHandstandToggle = State
    if State then
        task.spawn(function()
            while equipHandstandToggle do
                local handstandTool = game.Players.LocalPlayer.Backpack:FindFirstChild("Handstand")
                if handstandTool then
                    handstandTool.Parent = game.Players.LocalPlayer.Character
                end
                task.wait(0.1)
            end
        end)
    end
end)

local Rock = Main:AddFolder("Rock Farm")
-- Define the gettool function first
function gettool()
    for i, v in pairs(game.Players.LocalPlayer.Backpack:GetChildren()) do
        if v.Name == "Punch" and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
    game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
    game:GetService("Players").LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
end

local selectrock = ""

local switch = Rock:AddSwitch("Auto Punch Jungle Rock (10M)", function(state)
    selectrock = "Ancient Jungle Rock"
    getgenv().autoFarm = state
    while getgenv().autoFarm do
        task.wait()
        if game:GetService("Players").LocalPlayer.Durability.Value >= 10000000 then
            for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                if v.Name == "neededDurability" and v.Value == 10000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                    gettool()
                end
            end
        end
    end
end)

local switch = Rock:AddSwitch("Auto Punch King Rock (5M)", function(state)
    selectrock = "Muscle King Gym Rock"
		getgenv().autoFarm = state
		while getgenv().autoFarm do
			task.wait()
			if game:GetService("Players").LocalPlayer.Durability.Value >= 5000000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 5000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
end)

local switch = Rock:AddSwitch("Auto Punch Legend Rock (1M)", function(state)
    selectrock = "Legend Gym Rock"
		getgenv().autoFarm = state
		while getgenv().autoFarm do
			task.wait()
			if game:GetService("Players").LocalPlayer.Durability.Value >= 1000000 then
				for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
					if v.Name == "neededDurability" and v.Value == 1000000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
						firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
						gettool()
					end
				end
			end
		end
end)

local switch = Rock:AddSwitch("Auto Punch Inferno Rock (750K)", function(state)
    selectrock = "Eternal Gym Rock"
    getgenv().autoFarm = state
    while getgenv().autoFarm do
        task.wait()
        if game:GetService("Players").LocalPlayer.Durability.Value >= 750000 then
            for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                if v.Name == "neededDurability" and v.Value == 750000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                    gettool()
                end
            end
        end
    end
end)

local switch = Rock:AddSwitch("Auto Punch Mythical Rock (400K)", function(state)
    selectrock = "Mythical Gym Rock"
    getgenv().autoFarm = state
    while getgenv().autoFarm do
        task.wait()
        if game:GetService("Players").LocalPlayer.Durability.Value >= 400000 then
            for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                if v.Name == "neededDurability" and v.Value == 400000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                    gettool()
                end
            end
        end
    end
end)

local switch = Rock:AddSwitch("Auto Punch Frost Rock (150K)", function(state)
    selectrock = "Frost Gym Rock"
    getgenv().autoFarm = state
    while getgenv().autoFarm do
        task.wait()
        if game:GetService("Players").LocalPlayer.Durability.Value >= 150000 then
            for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                if v.Name == "neededDurability" and v.Value == 150000 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                    gettool()
                end
            end
        end
    end
end)

local switch = Rock:AddSwitch("Auto Punch Tiny Rock (0)", function(state)
           selectrock = "Tiny Island Rock"
    getgenv().autoFarm = state
    while getgenv().autoFarm do
        task.wait()
        if game:GetService("Players").LocalPlayer.Durability.Value >= 0 then
            for i, v in pairs(game:GetService("Workspace").machinesFolder:GetDescendants()) do
                if v.Name == "neededDurability" and v.Value == 0 and game.Players.LocalPlayer.Character:FindFirstChild("LeftHand") and game.Players.LocalPlayer.Character:FindFirstChild("RightHand") then
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.RightHand, 1)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 0)
                    firetouchinterest(v.Parent.Rock, game:GetService("Players").LocalPlayer.Character.LeftHand, 1)
                    gettool()
                end
            end
        end
    end
end)

local Fast Tools = Main:AddFolder("Fast Tools")













local Stats = window:AddTab("Stats")

local function abbreviateNumber(value)
    if value >= 1e15 then
        return string.format("%.1fQa", value / 1e15)
    elseif value >= 1e12 then
        return string.format("%.1fT", value / 1e12)
    elseif value >= 1e9 then
        return string.format("%.1fB", value / 1e9)
    elseif value >= 1e6 then
        return string.format("%.1fM", value / 1e6)
    elseif value >= 1e3 then
        return string.format("%.1fK", value / 1e3)
    else
        return tostring(value)
    end
end

local labels = {
    TimeSpentLabel = Stats:AddLabel("Time spent in this server: 00:00"),
    StrengthGainedLabel = Stats:AddLabel("Amount of strength gained in this server: 0"),
    DurabilityGainedLabel = Stats:AddLabel("Amount of durability gained in this server: 0"),
    AgilityGainedLabel = Stats:AddLabel("Amount of agility gained in this server: 0"),
    KillsGainedLabel = Stats:AddLabel("Amount of kills gained in this server: 0"),
    EvilKarmaGainedLabel = Stats:AddLabel("Amount of Evil Karma gained in this server: 0"),
    GoodKarmaGainedLabel = Stats:AddLabel("Amount of Good Karma gained in this server: 0")
}

local function createMyLabels()
    local player = game.Players.LocalPlayer
    if not player then return end

    local leaderstats = player:WaitForChild("leaderstats")
    if not leaderstats then return end

    local strengthStat = leaderstats:WaitForChild("Strength")
    local durabilityStat = player:WaitForChild("Durability")
    local agilityStat = player:WaitForChild("Agility")
    local killsStat = leaderstats:WaitForChild("Kills")
    local evilKarmaStat = player:WaitForChild("evilKarma")
    local goodKarmaStat = player:WaitForChild("goodKarma")

    local initialStrength = strengthStat.Value or 0
    local initialDurability = durabilityStat.Value or 0
    local initialAgility = agilityStat.Value or 0
    local initialKills = killsStat.Value or 0
    local initialEvilKarma = evilKarmaStat.Value or 0
    local initialGoodKarma = goodKarmaStat.Value or 0

    local startTime = tick()

    local function updateLabels()
        local strengthGained = strengthStat.Value - initialStrength
        local durabilityGained = durabilityStat.Value - initialDurability
        local agilityGained = agilityStat.Value - initialAgility
        local killsGained = killsStat.Value - initialKills
        local evilKarmaGained = evilKarmaStat.Value - initialEvilKarma
        local goodKarmaGained = goodKarmaStat.Value - initialGoodKarma

        labels.StrengthGainedLabel.Text = "Amount of strength gained in this server: " .. abbreviateNumber(strengthGained)
        labels.DurabilityGainedLabel.Text = "Amount of durability gained in this server: " .. abbreviateNumber(durabilityGained)
        labels.AgilityGainedLabel.Text = "Amount of agility gained in this server: " .. abbreviateNumber(agilityGained)
        labels.KillsGainedLabel.Text = "Amount of kills gained in this server: " .. abbreviateNumber(killsGained)
        labels.EvilKarmaGainedLabel.Text = "Amount of Evil Karma gained in this server: " .. abbreviateNumber(evilKarmaGained)
        labels.GoodKarmaGainedLabel.Text = "Amount of Good Karma gained in this server: " .. abbreviateNumber(goodKarmaGained)
    end

    local function updateTimeSpent()
        local timeSpent = tick() - startTime
        local minutes = math.floor(timeSpent / 60)
        local seconds = math.floor(timeSpent % 60)
        labels.TimeSpentLabel.Text = string.format("Time spent in this server: %02d:%02d", minutes, seconds)
    end

    strengthStat.Changed:Connect(updateLabels)
    durabilityStat.Changed:Connect(updateLabels)
    agilityStat.Changed:Connect(updateLabels)
    killsStat.Changed:Connect(updateLabels)
    evilKarmaStat.Changed:Connect(updateLabels)
    goodKarmaStat.Changed:Connect(updateLabels)

    game:GetService("RunService").Heartbeat:Connect(updateTimeSpent)

    updateLabels()
end

createMyLabels()

Stats:AddButton("Show Kills Gui", function()
local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
    if leaderstats then
        local killsLabel = StatsFolder:AddLabel("Kills: " .. (leaderstats.Kills and leaderstats.Kills.Value or 0))
        local strengthLabel = StatsFolder:AddLabel("Strength: " .. (leaderstats.Strength and math.ceil(leaderstats.Strength.Value) or 0))
        local durabilityLabel = StatsFolder:AddLabel("Durability: " .. (leaderstats.Durability and leaderstats.Durability.Value or 0))
        if leaderstats.Kills then
            leaderstats.Kills.Changed:Connect(function(value)
                killsLabel.Text = "Kills: " .. value
            end)
        end
        if leaderstats.Strength then
            leaderstats.Strength.Changed:Connect(function(value)
                strengthLabel.Text = "Strength: " .. math.ceil(value)
            end)
        end
        if leaderstats.Durability then
            leaderstats.Durability.Changed:Connect(function(value)
                durabilityLabel.Text = "Durability: " .. value
            end)
        end
        LocalPlayer.CharacterAdded:Connect(function()
            killsLabel:Destroy()
            strengthLabel:Destroy()
            durabilityLabel:Destroy()
        end)
        LocalPlayer.CharacterRemoving:Connect(function()
            killsLabel:Destroy()
            strengthLabel:Destroy()
            durabilityLabel:Destroy()
        end)
    end
end)





local Client = window:AddTab("Client")

-- WalkSpeed Textbox & Toggle
local walkSpeedValue = 16 -- Default speed
Client:AddTextBox("WalkSpeed", function(text)
    local speed = tonumber(text)
    if speed and speed >= 1 and speed <= 500 then
        walkSpeedValue = speed
    end
end)

local setSpeed = false
Client:AddSwitch("Set Speed", function(state)
    setSpeed = state
    while setSpeed do
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = walkSpeedValue
        task.wait(0.1)
    end
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16 -- Reset to default
end)

-- JumpPower Textbox & Toggle
local jumpPowerValue = 50 -- Default JumpPower
Client:AddTextBox("JumpPower", function(text)
    local jump = tonumber(text)
    if jump then
        jumpPowerValue = jump
    end
end)

local applyJumpPower = false
Client:AddSwitch("Apply JumpPower", function(state)
    applyJumpPower = state
    game.Players.LocalPlayer.Character.Humanoid.UseJumpPower = true

    if applyJumpPower then
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = jumpPowerValue
    else
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50 -- Reset
    end
end)

-- Avatar Size Textbox & Toggle
local sizeValue = 1 -- Default size (normal)
Client:AddTextBox("Size", function(text)
    local size = tonumber(text)
    if size and size >= 1 and size <= 100 then
        sizeValue = size
    end
end)

local setSize = false
Client:AddSwitch("Set Sizes", function(state)
    setSize = state
    local char = game.Players.LocalPlayer.Character
    if char then
        local humanoid = char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            if state then
                humanoid.BodyDepthScale.Value = sizeValue
                humanoid.BodyHeightScale.Value = sizeValue
                humanoid.BodyWidthScale.Value = sizeValue
                humanoid.HeadScale.Value = sizeValue
            else
                humanoid.BodyDepthScale.Value = 1
                humanoid.BodyHeightScale.Value = 1
                humanoid.BodyWidthScale.Value = 1
                humanoid.HeadScale.Value = 1
            end
        end
    end
end)

Client:AddLabel("-------------")

local switch = Client:AddSwitch("Lock Position", function(Value)
    if Value then
        -- Lock Position
        local currentPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentPos
            end
        end)
    else
        -- Unlock Position
        if getgenv().posLock then
            getgenv().posLock:Disconnect()
            getgenv().posLock = nil
        end
    end
end)




Client:AddButton("Permanent Shift Lock", function()
    loadstring(game:HttpGet('https://pastebin.com/raw/CjNsnSDy'))()
end)

Client:AddButton("Anti AFK", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/evxncodes/mainroblox/main/anti-afk", true))()
end)

-- Unable Trade Toggle
Client:AddSwitch("Disable Trade", function(State)
    if State then
        game:GetService("ReplicatedStorage").rEvents.tradingEvent:FireServer("disableTrading")
    else
        game:GetService("ReplicatedStorage").rEvents.tradingEvent:FireServer("enableTrading")
    end
end)

-- Hide Pets Toggle
Client:AddSwitch("Hide Pets", function(State)
    if State then
        game:GetService("ReplicatedStorage").rEvents.showPetsEvent:FireServer("hidePets")
    else
        game:GetService("ReplicatedStorage").rEvents.showPetsEvent:FireServer("showPets")
    end
end)



local autoRepToggle = false
Client:AddSwitch("Auto Lift", function(State)
    autoRepToggle = State
    if State then
        task.spawn(function()
            while autoRepToggle do
                game:GetService("Players").LocalPlayer:WaitForChild("muscleEvent"):FireServer("rep")
                task.wait(0.1)
            end
        end)
    end
end)


local Misc  =  window:AddTab("Misc")
local folder = Misc:AddFolder("Local Player")

folder:AddSwitch("Auto Eat Protein Egg Every 30 Minutes", function(State)
getgenv().autoEatProteinEggActive = state
    task.spawn(function()
        while getgenv().autoEatProteinEggActive and LocalPlayer.Character do
            local egg = LocalPlayer.Backpack:FindFirstChild("Protein Egg") or LocalPlayer.Character:FindFirstChild("Protein Egg")
            if egg then
                egg.Parent = LocalPlayer.Character
                ReplicatedStorage.muscleEvent:FireServer("rep")
            end
            task.wait(1800)
        end
    end)
end)

folder:AddSwitch("Auto Eat Protein Egg Every 1 Hour", function(State)
getgenv().autoEatProteinEggActive = state
    task.spawn(function()
        while getgenv().autoEatProteinEggActive and LocalPlayer.Character do
            local egg = LocalPlayer.Backpack:FindFirstChild("Protein Egg") or LocalPlayer.Character:FindFirstChild("Protein Egg")
            if egg then
                egg.Parent = LocalPlayer.Character
                ReplicatedStorage.muscleEvent:FireServer("rep")
            end
            task.wait(3600)
        end
    end)
end)

local folder = Misc:AddFolder("Misc 1")

folder:AddButton("Remove AD Portal",function()
    for _, portal in pairs(game:GetDescendants()) do
        if portal.Name == "RobloxForwardPortals" then
            portal:Destroy()
        end
    end
    
    -- Set up connection to remove future ad portals
    if _G.AdRemovalConnection then
        _G.AdRemovalConnection:Disconnect()
    end
    
    _G.AdRemovalConnection = game.DescendantAdded:Connect(function(descendant)
        if descendant.Name == "RobloxForwardPortals" then
            descendant:Destroy()
        end
    end)
end)

local parts = {}
local partSize = 2048
local totalDistance = 50000
local startPosition = Vector3.new(-2, -9.5, -2)
local numberOfParts = math.ceil(totalDistance / partSize)

local function createParts()
    for x = 0, numberOfParts - 1 do
        for z = 0, numberOfParts - 1 do
            local newPartSide = Instance.new("Part")
            newPartSide.Size = Vector3.new(partSize, 1, partSize)
            newPartSide.Position = startPosition + Vector3.new(x * partSize, 0, z * partSize)
            newPartSide.Anchored = true
            newPartSide.Transparency = 1
            newPartSide.CanCollide = true
            newPartSide.Name = "Part_Side_" .. x .. "_" .. z
            newPartSide.Parent = workspace
            table.insert(parts, newPartSide)
            
            local newPartLeftRight = Instance.new("Part")
            newPartLeftRight.Size = Vector3.new(partSize, 1, partSize)
            newPartLeftRight.Position = startPosition + Vector3.new(-x * partSize, 0, z * partSize)
            newPartLeftRight.Anchored = true
            newPartLeftRight.Transparency = 1
            newPartLeftRight.CanCollide = true
            newPartLeftRight.Name = "Part_LeftRight_" .. x .. "_" .. z
            newPartLeftRight.Parent = workspace
            table.insert(parts, newPartLeftRight)
            
            local newPartUpLeft = Instance.new("Part")
            newPartUpLeft.Size = Vector3.new(partSize, 1, partSize)
            newPartUpLeft.Position = startPosition + Vector3.new(-x * partSize, 0, -z * partSize)
            newPartUpLeft.Anchored = true
            newPartUpLeft.Transparency = 1
            newPartUpLeft.CanCollide = true
            newPartUpLeft.Name = "Part_UpLeft_" .. x .. "_" .. z
            newPartUpLeft.Parent = workspace
            table.insert(parts, newPartUpLeft)
            
            local newPartUpRight = Instance.new("Part")
            newPartUpRight.Size = Vector3.new(partSize, 1, partSize)
            newPartUpRight.Position = startPosition + Vector3.new(x * partSize, 0, -z * partSize)
            newPartUpRight.Anchored = true
            newPartUpRight.Transparency = 1
            newPartUpRight.CanCollide = true
            newPartUpRight.Name = "Part_UpRight_" .. x .. "_" .. z
            newPartUpRight.Parent = workspace
            table.insert(parts, newPartUpRight)
        end
    end
end

local function makePartsWalkthrough()
    for _, part in ipairs(parts) do
        if part and part.Parent then
            part.CanCollide = false
        end
    end
end

local function makePartsSolid()
    for _, part in ipairs(parts) do
        if part and part.Parent then
            part.CanCollide = true
        end
    end
end

folder:AddSwitch("Walk On Water", function(bool)
    if bool then
        createParts()
    else
        makePartsWalkthrough()
    end

end)

local Server = window:AddTab("Server")

Server:AddLabel("|-----Rejoin Options-----|")

Server:AddButton("Rejoin Server", function()
    local ts = game:GetService("TeleportService")
    local p = game:GetService("Players").LocalPlayer
    ts:Teleport(game.PlaceId, p)
end)

local joinLowPlayerServerSwitch = Server:AddSwitch("Join Low Player Server", function(bool)
    if bool then
        local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua"))()
        module:Teleport(game.PlaceId, "Lowest")
    end
end)






Server:AddLabel("|-----Graphics Options-----|")

Server:AddButton("Remove Textures", function()
   for _, v in pairs(game:GetDescendants()) do
        if v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        end
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Textures removed!",
        Duration = 5
    })
end)

Server:AddButton("Reduce Textures", function()
     settings().Rendering.QualityLevel = 1
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Graphics reduced!",
        Duration = 5
    })
end)

Server:AddButton("Disable Shadows", function()
local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Shadows disabled!",
        Duration = 5
    })

end)

Server:AddButton("Remove Effects", function()
 for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") then
            v.Enabled = false
        end
    end
    
    local lighting = game:GetService("Lighting")
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
            v.Enabled = false
        end
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Effects disabled!",
        Duration = 5
    })
end)

Server:AddButton("Simplify Materials", function()
for _, v in pairs(game:GetDescendants()) do
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = Enum.Material.SmoothPlastic
            if v.Parent and (v.Parent:FindFirstChild("Humanoid") or v.Parent.Parent:FindFirstChild("Humanoid")) then
            else
                v.Reflectance = 0
            end
        end
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Materials simplified!",
        Duration = 5
    })

end)

Server:AddButton("Remove Fog", function()
 local lighting = game:GetService("Lighting")
    lighting.FogEnd = 9e9
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Fog removed!",
        Duration = 5
    })

end)

Server:AddButton("Full optimization", function()
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") then
            v.Enabled = false
        end
    end
    
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    lighting.Brightness = 0
    
    settings().Rendering.QualityLevel = 1
    
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        elseif v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = Enum.Material.SmoothPlastic
            if v.Parent and (v.Parent:FindFirstChild("Humanoid") or v.Parent.Parent:FindFirstChild("Humanoid")) then
            else
                v.Reflectance = 0
            end
        end
    end
    
    for _, v in pairs(lighting:GetChildren()) do
        if v:IsA("BlurEffect") or v:IsA("SunRaysEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("BloomEffect") or v:IsA("DepthOfFieldEffect") then
            v.Enabled = false
        end
    end
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Performance",
        Text = "Full optimization applied!",
        Duration = 5
    })
end)


Server:AddLabel("|-----Rebirth-----|")


local switch = Server:AddSwitch("Auto Rebirth (Normal)", function(state)
    autoRebirth = state
    while autoRebirth do
        game:GetService("ReplicatedStorage"):WaitForChild("rEvents"):WaitForChild("rebirthRemote"):InvokeServer("rebirthRequest")
        task.wait(0.1)
    end
end)

local autoSizeLoop = nil

local switch = Server:AddSwitch("Auto Size 2", function(state)
    if state then
        autoSizeLoop = task.spawn(function()
            while task.wait(0) do
                game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 2)
            end
        end)
    else
        if autoSizeLoop then
            task.cancel(autoSizeLoop)
            autoSizeLoop = nil
        end
    end
end)


local Killing = window:AddTab("Killing")

Killing:AddLabel("Kill Aura").TextSize = 25

local dropdown = Killing:AddDropdown("Select Pet", function(text)
    local petsFolder = game.Players.LocalPlayer.petsFolder
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.2)

    local petName = text
    local petsToEquip = {}

    for _, pet in pairs(game.Players.LocalPlayer.petsFolder.Unique:GetChildren()) do
        if pet.Name == petName then
            table.insert(petsToEquip, pet)
        end
    end

    local maxPets = 8
    local equippedCount = math.min(#petsToEquip, maxPets)

    for i = 1, equippedCount do
        game:GetService("ReplicatedStorage").rEvents.equipPetEvent:FireServer("equipPet", petsToEquip[i])
        task.wait(0.1)
    end
end)

local Wild_Wizard = dropdown:Add("Wild Wizard")
local Mighty_Monster = dropdown:Add("Mighty Monster")

local LocalPlayer = game.Players.LocalPlayer

local button = Killing:AddSwitch("No Punch Animation", function(state)
    if state then
        local blockedAnimations = {
            ["rbxassetid://3638729053"] = true,
            ["rbxassetid://3638767427"] = true,
        }

        local function stopBlockedAnimations(humanoid)
            for _, track in pairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation then
                    local animId = track.Animation.AnimationId
                    local animName = track.Name:lower()
                    if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                        track:Stop()
                    end
                end
            end
        end

        local function setupAnimationBlocking()
            local char = LocalPlayer.Character
            if not char or not char:FindFirstChild("Humanoid") then return end
            local humanoid = char:FindFirstChild("Humanoid")

            stopBlockedAnimations(humanoid)

            if not _G.AnimBlockConnection then
                _G.AnimBlockConnection = humanoid.AnimationPlayed:Connect(function(track)
                    if track.Animation then
                        local animId = track.Animation.AnimationId
                        local animName = track.Name:lower()
                        if blockedAnimations[animId] or animName:match("punch") or animName:match("attack") or animName:match("right") then
                            track:Stop()
                        end
                    end
                end)
            end
        end

        setupAnimationBlocking()

        _G.AutoPunchLoop = true
        task.spawn(function()
            while _G.AutoPunchLoop do
                local char = LocalPlayer.Character
                if char and char:FindFirstChild("Humanoid") then
                    stopBlockedAnimations(char.Humanoid)
                end

                local punch = LocalPlayer.Backpack:FindFirstChild("Punch") or (char and char:FindFirstChild("Punch"))
                if punch then
                    if punch.Parent ~= char then
                        punch.Parent = char
                    end
                    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                end
                task.wait(0.01)
            end
        end)

        if not _G.CharacterAddedConnection then
            _G.CharacterAddedConnection = LocalPlayer.CharacterAdded:Connect(function()
                task.wait(1)
                setupAnimationBlocking()
            end)
        end
    else
        _G.AutoPunchLoop = false
        if _G.AnimBlockConnection then _G.AnimBlockConnection:Disconnect() _G.AnimBlockConnection = nil end
    end
end)

local LocalPlayer = game.Players.LocalPlayer
local sizeToSet = 0/0
local megaSwitchEnabled = false
local posLockConnection
local safePlatform

local megaSwitch = Killing:AddSwitch("Safe Spot + Nan Size", function(state)
    megaSwitchEnabled = state

    if state then
        local posX, posY, posZ = 100000, -200, 100000
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

        safePlatform = Instance.new("Part")
        safePlatform.Size = Vector3.new(50, 1, 50)
        safePlatform.Position = Vector3.new(posX, posY - 3, posZ)
        safePlatform.Anchored = true
        safePlatform.CanCollide = true
        safePlatform.Color = Color3.fromRGB(255, 0, 0)
        safePlatform.Name = "SafePlatform"
        safePlatform.Parent = workspace

        task.wait(0.2)
        humanoidRootPart.CFrame = CFrame.new(posX, posY, posZ)

        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Teletransporte",
            Text = "Teleported",
            Duration = 0
        })

        local currentPos = humanoidRootPart.CFrame
        posLockConnection = game:GetService("RunService").Heartbeat:Connect(function()
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character.HumanoidRootPart.CFrame = currentPos
            end
        end)

        task.spawn(function()
            while megaSwitchEnabled do
                pcall(function()
                    game:GetService("ReplicatedStorage").rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", sizeToSet)
                end)

                local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
                if punch then
                    punch.Parent = LocalPlayer.Character
                end
                local egg = LocalPlayer.Backpack:FindFirstChild("Protein Egg")
                if egg then
                    egg.Parent = LocalPlayer.Character
                end

                local punchTool = LocalPlayer.Backpack:FindFirstChild("Punch") or LocalPlayer.Character:FindFirstChild("Punch")
                if punchTool then
                    if punchTool.Parent ~= LocalPlayer.Character then
                        punchTool.Parent = LocalPlayer.Character
                    end
                    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                end

                task.wait(0.01)
            end
        end)

    else
        if posLockConnection then
            posLockConnection:Disconnect()
            posLockConnection = nil
        end
        if safePlatform then
            safePlatform:Destroy()
            safePlatform = nil
        end
    end
end)

Killing:AddSwitch("Auto Punch With Animation",function(toggleState)
if toggleState then
            local player = game.Players.LocalPlayer
            local playerName = player.Name
            local punchTool =
                player.Backpack:FindFirstChild("Punch") or
                game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")

            _G.punchanim = true

            while _G.punchanim do
                if punchTool then
                    if punchTool.Parent ~= game.Workspace:FindFirstChild(playerName) then
                        punchTool.Parent = game.Workspace:FindFirstChild(playerName)
                    end
                    punchTool:Activate()
                    wait()
                else
                    warn("Punch tool not found")
                    _G.punchanim = false
                end
            end
        else
            _G.punchanim = false
        end
end)








Killing:AddLabel("")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local function checkCharacter()
    if not LocalPlayer.Character then
        repeat task.wait() until LocalPlayer.Character
    end
    return LocalPlayer.Character
end

local function gettool()
    for _, v in pairs(LocalPlayer.Backpack:GetChildren()) do
        if v.Name == "Punch" and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid:EquipTool(v)
        end
    end
    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
end

local function isPlayerAlive(player)
    return player and player.Character
       and player.Character:FindFirstChild("HumanoidRootPart")
       and player.Character:FindFirstChild("Humanoid")
       and player.Character.Humanoid.Health > 0
end

local function killPlayer(target)
    if not isPlayerAlive(target) then return end
    local character = checkCharacter()
    if character and character:FindFirstChild("LeftHand") then
        pcall(function()
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 0)
            firetouchinterest(target.Character.HumanoidRootPart, character.LeftHand, 1)
            gettool()
        end)
    end
end

local function getPlayerDisplayText(player)
    return player.DisplayName .. " | " .. player.Name
end

_G.whitelistedPlayers = _G.whitelistedPlayers or {}
_G.blacklistedPlayers = _G.blacklistedPlayers or {}

local function isWhitelisted(player)
    for _, name in ipairs(_G.whitelistedPlayers) do
        if name:lower() == player.Name:lower() then
            return true
        end
    end
    return false
end

local function isBlacklisted(player)
    for _, name in ipairs(_G.blacklistedPlayers) do
        if name:lower() == player.Name:lower() then
            return true
        end
    end
    return false
end

local whitelistTextBox = Killing:AddTextBox("Whitelist", function(inputText)
    local playerName = inputText:match("^%s*(.-)%s*$")
    if playerName ~= "" then
        for _, name in ipairs(_G.whitelistedPlayers) do
            if name:lower() == playerName:lower() then
                return
            end
        end
        table.insert(_G.whitelistedPlayers, playerName)
    end
end)

local whitelistDropdown = Killing:AddDropdown("Whitelist", function(selectedText)
    local playerName = selectedText:match("| (.+)$")
    if playerName then
        playerName = playerName:match("^%s*(.-)%s*$")
        for _, name in ipairs(_G.whitelistedPlayers) do
            if name:lower() == playerName:lower() then return end
        end
        table.insert(_G.whitelistedPlayers, playerName)
    end
end)

Killing:AddButton("Clear Whitelist", function()
    _G.whitelistedPlayers = {}
end)

Killing:AddSwitch("Whitelist Friends", function(state)
    if state then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player:IsFriendsWith(LocalPlayer.UserId) then
                local already = false
                for _, name in ipairs(_G.whitelistedPlayers) do
                    if name:lower() == player.Name:lower() then
                        already = true
                        break
                    end
                end
                if not already then
                    table.insert(_G.whitelistedPlayers, player.Name)
                end
            end
        end
    end
end)

Killing:AddSwitch("WL Invincibility", function(state)
    _G.WLInvincibilityEnabled = state
    local muscleEvent = game:GetService("Players").LocalPlayer:FindFirstChild("muscleEvent")
    
    if not muscleEvent or not muscleEvent:IsA("RemoteEvent") then
        nothingLabel.Text = "Erro: muscleEvent não encontrado"
        return
    end

    if state then
        -- Salvar a função original apenas uma vez
        if not _G.OriginalMuscleEvent then
            _G.OriginalMuscleEvent = muscleEvent.FireServer
        end
        
        -- Substituir a função
        muscleEvent.FireServer = function(self, ...)
            local args = {...}
            if args[1] == "punch" and #args >= 2 then
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("HumanoidRootPart") then
                    for _, player in ipairs(game.Players:GetPlayers()) do
                        if player ~= game.Players.LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            local distance = (character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude
                            if distance < 10 and whitelist[player.Name] then
                                return nil -- Bloqueia o soco se o jogador estiver na whitelist
                            end
                        end
                    end
                end
            end
            return _G.OriginalMuscleEvent(self, ...)
        end
    else
        -- Restaurar a função original
        if _G.OriginalMuscleEvent then
            muscleEvent.FireServer = _G.OriginalMuscleEvent
            _G.OriginalMuscleEvent = nil
        end
    end
end)

local blacklistTextbox = Killing:AddTextBox("Blacklist", function(inputText)
    local playerName = inputText:match("^%s*(.-)%s*$") -- Remove espaÃƒÆ’Ã‚Â§os no inÃƒÆ’Ã‚Â­cio/fim
    if playerName ~= "" then
        for _, name in ipairs(_G.blacklistedPlayers) do
            if name:lower() == playerName:lower() then
                return
            end
        end
        table.insert(_G.blacklistedPlayers, playerName)
    end
end, "Enter the player name")

local blacklistDropdown = Killing:AddDropdown("Blacklist", function(selectedText)
    local playerName = selectedText:match("| (.+)$")
    if playerName then
        playerName = playerName:match("^%s*(.-)%s*$")
        for _, name in ipairs(_G.blacklistedPlayers) do
            if name:lower() == playerName:lower() then return end
        end
        table.insert(_G.blacklistedPlayers, playerName)
    end
end)

Killing:AddButton("Clear Blacklist", function()
    _G.blacklistedPlayers = {}
end)

Killing:AddSwitch("Kill List", function(state)
    _G.killBlacklistedOnly = state
    if state then
        if not _G.blacklistKillConnection then
            _G.blacklistKillConnection = game:GetService("RunService").Heartbeat:Connect(function()
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and isBlacklisted(player) then
                        killPlayer(player)
                    end
                end
            end)
        end
    else
        if _G.blacklistKillConnection then
            _G.blacklistKillConnection:Disconnect()
            _G.blacklistKillConnection = nil
        end
    end
end)

Killing:AddSwitch("Kill All", function(state)
    _G.killAll = state
    if state then
        if not _G.killAllConnection then
            _G.killAllConnection = game:GetService("RunService").Heartbeat:Connect(function()
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and not isWhitelisted(player) then
                        killPlayer(player)
                    end
                end
            end)
        end
    else
        if _G.killAllConnection then
            _G.killAllConnection:Disconnect()
            _G.killAllConnection = nil
        end
    end
end)

Killing:AddTextBox("Range (1-140)", function(text)
    local range = tonumber(text)
    if range then
        _G.deathRingRange = math.clamp(range, 1, 140)
    end
end)

Killing:AddTextBox("Player Name (Optional)", function(text)
    _G.targetPlayerName = text
end)

Killing:AddSwitch("Protect Player", function(state)
    _G.DeathRingProtectionEnabled = state
    
    if state then
        if not _G.DeathRingConnection then
            _G.DeathRingConnection = game:GetService("RunService").Heartbeat:Connect(function()
                if _G.DeathRingProtectionEnabled then
                    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
                        if whitelist[player.Name] and player ~= game.Players.LocalPlayer then
                            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                _G.ProtectedPlayers[player.Name] = true
                                
                                for _, enemy in ipairs(game:GetService("Players"):GetPlayers()) do
                                    if not whitelist[enemy.Name] and enemy ~= game.Players.LocalPlayer then
                                        if enemy.Character and enemy.Character:FindFirstChild("HumanoidRootPart") then
                                            local distance = (player.Character.HumanoidRootPart.Position - enemy.Character.HumanoidRootPart.Position).Magnitude
                                            if distance <= (_G.deathRingRange or 20) then
                                                killPlayer(enemy)
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end)
        end
    else
        if _G.DeathRingConnection then
            _G.DeathRingConnection:Disconnect()
            _G.DeathRingConnection = nil
        end
        _G.ProtectedPlayers = {}
    end
end)

Killing:AddSwitch("Death Ring", function(state)
    _G.deathRingEnabled = state
    if state then
        if not _G.deathRingConnection then
            _G.deathRingConnection = game:GetService("RunService").Heartbeat:Connect(function()
                local character = checkCharacter()
                local myPos = character and character:FindFirstChild("HumanoidRootPart") and character.HumanoidRootPart.Position
                if myPos then
                    for _, player in ipairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer and not isWhitelisted(player) and isPlayerAlive(player) then
                            if (myPos - player.Character.HumanoidRootPart.Position).Magnitude <= (_G.deathRingRange or 20) then
                                killPlayer(player)
                            end
                        end
                    end
                end
            end)
        end
    else
        if _G.deathRingConnection then
            _G.deathRingConnection:Disconnect()
            _G.deathRingConnection = nil
        end
    end
end)

Killing:AddSwitch("Invisible", function(state)

end)

Killing:AddLabel("")

for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        local displayText = getPlayerDisplayText(player)
        whitelistDropdown:Add(displayText)
        blacklistDropdown:Add(displayText)
    end
end

Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        local displayText = getPlayerDisplayText(player)
        whitelistDropdown:Add(displayText)
        blacklistDropdown:Add(displayText)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    local displayText = getPlayerDisplayText(player)
    whitelistDropdown:Remove(displayText)
    blacklistDropdown:Remove(displayText)
end)

local nothingLabel = Killing:AddLabel("")

local whitelistLabel = Killing:AddLabel("Whitelisted Players:\nNone")

local nothingLabel = Killing:AddLabel("")

local blacklistLabel = Killing:AddLabel("Blacklisted Players:\nNone")

local function UpdateLabels()
    if #_G.whitelistedPlayers == 0 then
        whitelistLabel.Text = "Whitelisted Players:\nNone"
    else
        whitelistLabel.Text = "Whitelisted Players:\n" .. table.concat(_G.whitelistedPlayers, "\n")
    end

    if #_G.blacklistedPlayers == 0 then
        blacklistLabel.Text = "Blacklisted Players:\nNone"
    else
        blacklistLabel.Text = "Blacklisted Players:\n" .. table.concat(_G.blacklistedPlayers, "\n")
    end
end

game:GetService("RunService").Heartbeat:Connect(UpdateLabels)













local TrackStats = window:AddTab("Track Stats")

local targetPlayer = nil

local textbox = TrackStats:AddTextBox("Player Username", function(text)
    local player = game.Players:FindFirstChild(text)
    if player then
        targetPlayer = player
    else
        targetPlayer = nil
        resetTargetStats()
    end
end)

local labels = {
    TargetStats = TrackStats:AddLabel("Target Stats:"),
    StrengthLabel = TrackStats:AddLabel("Strength: 0"),
    DurabilityLabel = TrackStats:AddLabel("Durability: 0"),
    AgilityLabel = TrackStats:AddLabel("Agility: 0"),
    RebirthsLabel = TrackStats:AddLabel("Rebirths: 0"),
    KillsLabel = TrackStats:AddLabel("Kills: 0"),
    EvilKarmaLabel = TrackStats:AddLabel("Evil Karma: 0"),
    GoodKarmaLabel = TrackStats:AddLabel("Good Karma: 0"),
    EquippedPetsLabel = TrackStats:AddLabel("Equipped Pets:"),
}

-- Create pet labels
for i = 1, 8 do
    labels["Pet" .. i .. "Label"] = TrackStats:AddLabel("Pet" .. i .. ": No pet Equipped")
end

local function updateTargetStats()
    if not targetPlayer then return end

    local leaderstats = targetPlayer:FindFirstChild("leaderstats")
    local goodKarma = targetPlayer:FindFirstChild("goodKarma")
    local evilKarma = targetPlayer:FindFirstChild("evilKarma")

    if leaderstats then
        labels.StrengthLabel.Text = "Strength: " .. abbreviateNumber(leaderstats:FindFirstChild("Strength") and leaderstats.Strength.Value or 0)
        labels.DurabilityLabel.Text = "Durability: " .. abbreviateNumber(targetPlayer:FindFirstChild("Durability") and targetPlayer.Durability.Value or 0)
        labels.AgilityLabel.Text = "Agility: " .. abbreviateNumber(targetPlayer:FindFirstChild("Agility") and targetPlayer.Agility.Value or 0)
        labels.RebirthsLabel.Text = "Rebirths: " .. abbreviateNumber(leaderstats:FindFirstChild("Rebirths") and leaderstats.Rebirths.Value or 0)
        labels.KillsLabel.Text = "Kills: " .. abbreviateNumber(leaderstats:FindFirstChild("Kills") and leaderstats.Kills.Value or 0)
    end

    labels.EvilKarmaLabel.Text = "Evil Karma: " .. abbreviateNumber(evilKarma and evilKarma.Value or 0)
    labels.GoodKarmaLabel.Text = "Good Karma: " .. abbreviateNumber(goodKarma and goodKarma.Value or 0)


task.spawn(function()
    while task.wait(0.1) do
        if targetPlayer then
            updateTargetStats()
        end
    end
end)

local Teleport = window:AddTab("Teleports")

Teleport:AddLabel("Teleports").TextSize = 25

Teleport:AddButton("Spawn", function()
    local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(2, 8, 115)
end)

Teleport:AddButton("Fortune Island", function()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local targetPosition = Vector3.new(-2606, 1, 5752)

    if character then
        character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
    end
end)

Teleport:AddButton("Secret Island", function()
    local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(1947, 2, 6191)
end)

Teleport:AddButton("Tiny Island", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(-34, 7, 1903)
end)

Teleport:AddButton("Frost Gym", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(- 2600.00244, 3.67686558, - 403.884369, 0.0873617008, 1.0482899e-09, 0.99617666, 3.07204253e-08, 1, - 3.7464023e-09, - 0.99617666, 3.09302628e-08, 0.0873617008)
end)

Teleport:AddButton("Mythical Gym", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(2255, 7, 1071)
end)

Teleport:AddButton("Inferno Gym", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(-6768, 7, -1287)
end)

Teleport:AddButton("Legend Gym", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(4604, 991, -3887)
end)

Teleport:AddButton("Muscle King", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(-8646, 17, -5738)
end)

Teleport:AddButton("Jungle Gym", function()
local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(-8659, 6, 2384)
end)

Teleport:AddButton("Lava Brawl", function()
    local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(4471, 119, -8836)
end)

Teleport:AddButton("Desert Brawl", function()
    local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(960, 17, -7398)
end)

Teleport:AddButton("Beach Brawl", function()
    local player = game.Players.LocalPlayer
		local character = player.Character or player.CharacterAdded:Wait()
		local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
		humanoidRootPart.CFrame = CFrame.new(-1849, 20, -6335)
end)

local Credits = window:AddTab("Credits")

Credits:AddLabel("Paid Version")
Credits:AddLabel("Script Made By Reaper")
Credits:AddLabel("Discord: olliezao.m80.")


local FarmV2 = window:AddTab("FarmV2")

FarmV2:AddLabel("|-----Fast Rebirth-----|")

local switch = FarmV2:AddSwitch("Hide All Frames", function(state)
    for _, frameName in ipairs({"strengthFrame", "durabilityFrame", "agilityFrame"}) do
        local frame = game:GetService("ReplicatedStorage"):FindFirstChild(frameName)
        if frame and frame:IsA("GuiObject") then
            frame.Visible = not bool
        end
    end
end)

local switch = FarmV2:AddSwitch("Fast Rebirths", function(state)
    if state then
    loadstring(game:HttpGet("https://raw.githubusercontent.com/0o0o0o0o0o0o0o0o0o0o0o0o/0o0o0o0o/refs/heads/main/Kk"))()
    end
end)

local switch = FarmV2:AddSwitch("Speed Grind (No Rebirth)", function(Value)
    local isGrinding = Value

    if not Value then
        return
    end

    for i = 1, 12 do
        task.spawn(function()
            while isGrinding do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.083)
            end
        end)
    end
end)

local switch = FarmV2:AddSwitch("Lock Position (Enable After Fast Rebirth)", function(state)
    lockPosition = state
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")

    if state and humanoid and hrp then
        savedPosition = hrp.Position
        humanoid.WalkSpeed = 0
        task.spawn(function()
            while lockPosition do
                if (hrp.Position - savedPosition).magnitude > 0.1 then
                    hrp.CFrame = CFrame.new(savedPosition)
                end
                task.wait(0.05)
            end
        end)
    else
        if humanoid then humanoid.WalkSpeed = 16 end
    end
end)

local switch = FarmV2:AddSwitch("Fast Strength", function(Value)
    getgenv().isGrinding = Value

    if not Value then return end

    for _ = 1, 30 do
        task.spawn(function()
            while getgenv().isGrinding do
                game:GetService("Players").LocalPlayer.muscleEvent:FireServer("rep")
                task.wait(0.01)
            end
        end)
    end
end)

FarmV2:AddLabel("|-----Fast Glitch-----|")

local switch = FarmV2:AddSwitch("Auto Fast Glitch Jungle Rock",function()

end)

local switch = FarmV2:AddSwitch("Auto Fast Glitch Muscle King Rock",function()

end)

local switch = FarmV2:AddSwitch("Auto Fast Glitch Legend Rock",function()

end)

FarmV2:AddLabel("|-----Auto Kill V2-----|")

local switch = FarmV2:AddSwitch("Auto Good Karma",function(bool)
autoGoodKarma = bool

    if autoGoodKarma then
        spawn(function()
            while autoGoodKarma do
                local player = game.Players.LocalPlayer
                local playerChar = player.Character
                local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
                local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")

                if playerChar and rightHand and leftHand then
                    for _, target in ipairs(game.Players:GetPlayers()) do
                        if target ~= player then
                            local evilKarma = target:FindFirstChild("evilKarma")
                            local goodKarma = target:FindFirstChild("goodKarma")

                            if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and evilKarma.Value > goodKarma.Value then
                                local targetChar = target.Character
                                local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")

                                if rootPart then
                                    firetouchinterest(rightHand, rootPart, 1)
                                    firetouchinterest(leftHand, rootPart, 1)
                                    firetouchinterest(rightHand, rootPart, 0)
                                    firetouchinterest(leftHand, rootPart, 0)
                                end
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)

local switch = FarmV2:AddSwitch("Auto Bad Karma",function(bool)
   autoBadKarma = bool

    if autoBadKarma then
        spawn(function()
            while autoBadKarma do
                local player = game.Players.LocalPlayer
                local playerChar = player.Character
                local rightHand = playerChar and playerChar:FindFirstChild("RightHand")
                local leftHand = playerChar and playerChar:FindFirstChild("LeftHand")

                if playerChar and rightHand and leftHand then
                    for _, target in ipairs(game.Players:GetPlayers()) do
                        if target ~= player then
                            local evilKarma = target:FindFirstChild("evilKarma")
                            local goodKarma = target:FindFirstChild("goodKarma")

                            if evilKarma and goodKarma and evilKarma:IsA("IntValue") and goodKarma:IsA("IntValue") and goodKarma.Value > evilKarma.Value then
                                local targetChar = target.Character
                                local rootPart = targetChar and targetChar:FindFirstChild("HumanoidRootPart")

                                if rootPart then
                                    firetouchinterest(rightHand, rootPart, 1)
                                    firetouchinterest(leftHand, rootPart, 1)
                                    firetouchinterest(rightHand, rootPart, 0)
                                    firetouchinterest(leftHand, rootPart, 0)
                                end
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)